import mongoose, { Document, Schema } from 'mongoose';

/**
 * Slicer Setting Definition
 */
export interface ISlicerSetting {
  key: string; // e.g., 'layerHeight'
  label: string; // Display name
  category: 'layer' | 'infill' | 'speed' | 'temperature' | 'support' | 'cooling' | 'retraction' | 'advanced';
  type: 'number' | 'boolean' | 'select' | 'text';
  unit?: string; // mm, mm/s, Â°C, %, etc.
  min?: number;
  max?: number;
  step?: number;
  default: any;
  options?: Array<{ value: any; label: string }>; // For select type
  description?: string;
  helpText?: string;

  // Visibility and usage
  visibleInUI: boolean; // Show in settings panel
  useInAIOptimization: boolean; // Include in AI optimization

  // Advanced
  dependency?: string; // Parent setting key (e.g., 'supportEnabled')
  advancedOnly: boolean; // Only show in advanced mode
  order: number; // Display order within category
}

/**
 * Complete Slicer Configuration
 */
export interface ISlicerConfig extends Document {
  name: string;
  description?: string;
  version: string;

  // All available settings
  settings: ISlicerSetting[];

  // Status
  isActive: boolean;
  isDefault: boolean;

  // Metadata
  createdBy: mongoose.Types.ObjectId;
  createdAt: Date;
  updatedAt: Date;
}

const slicerSettingSchema = new Schema<ISlicerSetting>({
  key: { type: String, required: true },
  label: { type: String, required: true },
  category: {
    type: String,
    required: true,
    enum: ['layer', 'infill', 'speed', 'temperature', 'support', 'cooling', 'retraction', 'advanced'],
  },
  type: {
    type: String,
    required: true,
    enum: ['number', 'boolean', 'select', 'text'],
  },
  unit: String,
  min: Number,
  max: Number,
  step: Number,
  default: Schema.Types.Mixed,
  options: [{
    value: Schema.Types.Mixed,
    label: String,
  }],
  description: String,
  helpText: String,
  visibleInUI: { type: Boolean, default: true },
  useInAIOptimization: { type: Boolean, default: true },
  dependency: String,
  advancedOnly: { type: Boolean, default: false },
  order: { type: Number, default: 0 },
}, { _id: false });

const slicerConfigSchema = new Schema<ISlicerConfig>({
  name: {
    type: String,
    required: true,
    trim: true,
    unique: true,
  },
  description: String,
  version: {
    type: String,
    default: '1.0.0',
  },
  settings: [slicerSettingSchema],
  isActive: {
    type: Boolean,
    default: true,
  },
  isDefault: {
    type: Boolean,
    default: false,
  },
  createdBy: {
    type: Schema.Types.ObjectId,
    ref: 'User',
    required: true,
  },
}, {
  timestamps: true,
});

// Indexes
slicerConfigSchema.index({ name: 1 });
slicerConfigSchema.index({ isActive: 1, isDefault: 1 });

// Ensure only one default config
slicerConfigSchema.pre('save', async function(next) {
  if (this.isDefault) {
    await mongoose.model('SlicerConfig').updateMany(
      { _id: { $ne: this._id } },
      { $set: { isDefault: false } }
    );
  }
  next();
});

export const SlicerConfig = mongoose.model<ISlicerConfig>('SlicerConfig', slicerConfigSchema);

/**
 * Default Slicer Configuration
 * Complete list of all available settings
 */
export const DEFAULT_SLICER_SETTINGS: ISlicerSetting[] = [
  // ============================================
  // LAYER SETTINGS
  // ============================================
  {
    key: 'layerHeight',
    label: 'Layer Height',
    category: 'layer',
    type: 'number',
    unit: 'mm',
    min: 0.05,
    max: 0.4,
    step: 0.01,
    default: 0.2,
    description: 'Height of each printed layer',
    helpText: 'Lower values = better quality but longer print time',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 1,
  },
  {
    key: 'initialLayerHeight',
    label: 'Initial Layer Height',
    category: 'layer',
    type: 'number',
    unit: 'mm',
    min: 0.1,
    max: 0.4,
    step: 0.01,
    default: 0.2,
    description: 'Height of the first layer',
    helpText: 'Usually same as layer height, can be thicker for better adhesion',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 2,
  },
  {
    key: 'lineWidth',
    label: 'Line Width',
    category: 'layer',
    type: 'number',
    unit: 'mm',
    min: 0.1,
    max: 2.0,
    step: 0.01,
    default: 0.4,
    description: 'Width of printed lines',
    helpText: 'Usually matches nozzle diameter',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 3,
  },
  {
    key: 'wallThickness',
    label: 'Wall Thickness',
    category: 'layer',
    type: 'number',
    unit: 'mm',
    min: 0.4,
    max: 10.0,
    step: 0.4,
    default: 1.2,
    description: 'Total thickness of walls',
    helpText: 'Typically 3-4 wall lines for strength',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 4,
  },
  {
    key: 'wallLineCount',
    label: 'Wall Line Count',
    category: 'layer',
    type: 'number',
    min: 1,
    max: 20,
    step: 1,
    default: 3,
    description: 'Number of wall lines',
    helpText: 'More walls = stronger but slower',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 5,
  },
  {
    key: 'topThickness',
    label: 'Top Thickness',
    category: 'layer',
    type: 'number',
    unit: 'mm',
    min: 0,
    max: 10.0,
    step: 0.2,
    default: 0.8,
    description: 'Thickness of top solid layers',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 6,
  },
  {
    key: 'bottomThickness',
    label: 'Bottom Thickness',
    category: 'layer',
    type: 'number',
    unit: 'mm',
    min: 0,
    max: 10.0,
    step: 0.2,
    default: 0.8,
    description: 'Thickness of bottom solid layers',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 7,
  },
  {
    key: 'topLayers',
    label: 'Top Layers',
    category: 'layer',
    type: 'number',
    min: 0,
    max: 20,
    step: 1,
    default: 4,
    description: 'Number of solid top layers',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: true,
    order: 8,
  },
  {
    key: 'bottomLayers',
    label: 'Bottom Layers',
    category: 'layer',
    type: 'number',
    min: 0,
    max: 20,
    step: 1,
    default: 4,
    description: 'Number of solid bottom layers',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: true,
    order: 9,
  },
  {
    key: 'horizontalExpansion',
    label: 'Horizontal Expansion',
    category: 'layer',
    type: 'number',
    unit: 'mm',
    min: -5,
    max: 5,
    step: 0.01,
    default: 0,
    description: 'Expand or shrink model horizontally',
    helpText: 'Positive = larger, negative = smaller',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 10,
  },

  // ============================================
  // INFILL SETTINGS
  // ============================================
  {
    key: 'infillDensity',
    label: 'Infill Density',
    category: 'infill',
    type: 'number',
    unit: '%',
    min: 0,
    max: 100,
    step: 5,
    default: 20,
    description: 'Density of infill pattern',
    helpText: 'Higher = stronger but slower and more material',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 1,
  },
  {
    key: 'infillPattern',
    label: 'Infill Pattern',
    category: 'infill',
    type: 'select',
    default: 'grid',
    options: [
      { value: 'grid', label: 'Grid' },
      { value: 'lines', label: 'Lines' },
      { value: 'triangles', label: 'Triangles' },
      { value: 'cubic', label: 'Cubic' },
      { value: 'gyroid', label: 'Gyroid' },
      { value: 'honeycomb', label: 'Honeycomb' },
      { value: 'lightning', label: 'Lightning' },
      { value: 'concentric', label: 'Concentric' },
    ],
    description: 'Pattern of infill',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 2,
  },
  {
    key: 'infillLineWidth',
    label: 'Infill Line Width',
    category: 'infill',
    type: 'number',
    unit: 'mm',
    min: 0.1,
    max: 2.0,
    step: 0.01,
    default: 0.4,
    description: 'Width of infill lines',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 3,
  },
  {
    key: 'infillOverlap',
    label: 'Infill Overlap',
    category: 'infill',
    type: 'number',
    unit: '%',
    min: 0,
    max: 50,
    step: 5,
    default: 10,
    description: 'Overlap between infill and walls',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 4,
  },

  // ============================================
  // SPEED SETTINGS
  // ============================================
  {
    key: 'printSpeed',
    label: 'Print Speed',
    category: 'speed',
    type: 'number',
    unit: 'mm/s',
    min: 10,
    max: 300,
    step: 5,
    default: 50,
    description: 'Default print speed',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 1,
  },
  {
    key: 'infillSpeed',
    label: 'Infill Speed',
    category: 'speed',
    type: 'number',
    unit: 'mm/s',
    min: 10,
    max: 300,
    step: 5,
    default: 60,
    description: 'Speed for infill printing',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 2,
  },
  {
    key: 'wallSpeed',
    label: 'Wall Speed',
    category: 'speed',
    type: 'number',
    unit: 'mm/s',
    min: 10,
    max: 300,
    step: 5,
    default: 40,
    description: 'Speed for wall printing',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 3,
  },
  {
    key: 'outerWallSpeed',
    label: 'Outer Wall Speed',
    category: 'speed',
    type: 'number',
    unit: 'mm/s',
    min: 10,
    max: 300,
    step: 5,
    default: 30,
    description: 'Speed for outer wall (visible surface)',
    helpText: 'Slower = better surface quality',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: true,
    order: 4,
  },
  {
    key: 'topBottomSpeed',
    label: 'Top/Bottom Speed',
    category: 'speed',
    type: 'number',
    unit: 'mm/s',
    min: 10,
    max: 300,
    step: 5,
    default: 40,
    description: 'Speed for top and bottom layers',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 5,
  },
  {
    key: 'travelSpeed',
    label: 'Travel Speed',
    category: 'speed',
    type: 'number',
    unit: 'mm/s',
    min: 50,
    max: 300,
    step: 10,
    default: 150,
    description: 'Speed for non-printing moves',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: false,
    order: 6,
  },
  {
    key: 'initialLayerSpeed',
    label: 'Initial Layer Speed',
    category: 'speed',
    type: 'number',
    unit: 'mm/s',
    min: 5,
    max: 100,
    step: 5,
    default: 20,
    description: 'Speed for first layer',
    helpText: 'Slower for better bed adhesion',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 7,
  },
  {
    key: 'supportSpeed',
    label: 'Support Speed',
    category: 'speed',
    type: 'number',
    unit: 'mm/s',
    min: 10,
    max: 300,
    step: 5,
    default: 50,
    description: 'Speed for support structures',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 8,
  },
  {
    key: 'bridgeSpeed',
    label: 'Bridge Speed',
    category: 'speed',
    type: 'number',
    unit: 'mm/s',
    min: 10,
    max: 150,
    step: 5,
    default: 30,
    description: 'Speed for bridging',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 9,
  },

  // ============================================
  // TEMPERATURE SETTINGS
  // ============================================
  {
    key: 'nozzleTemp',
    label: 'Nozzle Temperature',
    category: 'temperature',
    type: 'number',
    unit: 'Â°C',
    min: 0,
    max: 500,
    step: 5,
    default: 200,
    description: 'Extruder temperature',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 1,
  },
  {
    key: 'bedTemp',
    label: 'Bed Temperature',
    category: 'temperature',
    type: 'number',
    unit: 'Â°C',
    min: 0,
    max: 150,
    step: 5,
    default: 60,
    description: 'Heated bed temperature',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 2,
  },
  {
    key: 'initialLayerNozzleTemp',
    label: 'Initial Layer Nozzle Temp',
    category: 'temperature',
    type: 'number',
    unit: 'Â°C',
    min: 0,
    max: 500,
    step: 5,
    default: 200,
    description: 'Nozzle temperature for first layer',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 3,
  },
  {
    key: 'initialLayerBedTemp',
    label: 'Initial Layer Bed Temp',
    category: 'temperature',
    type: 'number',
    unit: 'Â°C',
    min: 0,
    max: 150,
    step: 5,
    default: 60,
    description: 'Bed temperature for first layer',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 4,
  },

  // ============================================
  // SUPPORT SETTINGS
  // ============================================
  {
    key: 'supportEnabled',
    label: 'Enable Support',
    category: 'support',
    type: 'boolean',
    default: true,
    description: 'Generate support structures',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 1,
  },
  {
    key: 'supportDensity',
    label: 'Support Density',
    category: 'support',
    type: 'number',
    unit: '%',
    min: 0,
    max: 100,
    step: 5,
    default: 15,
    description: 'Density of support structures',
    dependency: 'supportEnabled',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 2,
  },
  {
    key: 'supportPattern',
    label: 'Support Pattern',
    category: 'support',
    type: 'select',
    default: 'grid',
    options: [
      { value: 'grid', label: 'Grid' },
      { value: 'lines', label: 'Lines' },
      { value: 'zigzag', label: 'Zigzag' },
      { value: 'triangles', label: 'Triangles' },
    ],
    description: 'Pattern of support structures',
    dependency: 'supportEnabled',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: false,
    order: 3,
  },
  {
    key: 'supportOverhangAngle',
    label: 'Support Overhang Angle',
    category: 'support',
    type: 'number',
    unit: 'Â°',
    min: 0,
    max: 90,
    step: 5,
    default: 45,
    description: 'Minimum angle to generate support',
    helpText: 'Lower = more support',
    dependency: 'supportEnabled',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 4,
  },
  {
    key: 'supportZDistance',
    label: 'Support Z Distance',
    category: 'support',
    type: 'number',
    unit: 'mm',
    min: 0,
    max: 1,
    step: 0.05,
    default: 0.2,
    description: 'Gap between support and model',
    dependency: 'supportEnabled',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 5,
  },
  {
    key: 'supportXYDistance',
    label: 'Support XY Distance',
    category: 'support',
    type: 'number',
    unit: 'mm',
    min: 0,
    max: 5,
    step: 0.1,
    default: 0.7,
    description: 'Horizontal gap between support and model',
    dependency: 'supportEnabled',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 6,
  },

  // ============================================
  // COOLING SETTINGS
  // ============================================
  {
    key: 'fanSpeed',
    label: 'Fan Speed',
    category: 'cooling',
    type: 'number',
    unit: '%',
    min: 0,
    max: 100,
    step: 5,
    default: 100,
    description: 'Cooling fan speed during print',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 1,
  },
  {
    key: 'initialLayerFanSpeed',
    label: 'Initial Layer Fan Speed',
    category: 'cooling',
    type: 'number',
    unit: '%',
    min: 0,
    max: 100,
    step: 5,
    default: 0,
    description: 'Fan speed for first layer',
    helpText: 'Usually off for better adhesion',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: false,
    order: 2,
  },
  {
    key: 'minLayerTime',
    label: 'Minimum Layer Time',
    category: 'cooling',
    type: 'number',
    unit: 's',
    min: 0,
    max: 60,
    step: 1,
    default: 10,
    description: 'Minimum time per layer',
    helpText: 'Slows down fast layers for cooling',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 3,
  },

  // ============================================
  // RETRACTION SETTINGS
  // ============================================
  {
    key: 'retractionEnabled',
    label: 'Enable Retraction',
    category: 'retraction',
    type: 'boolean',
    default: true,
    description: 'Pull back filament during travel',
    helpText: 'Reduces stringing',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 1,
  },
  {
    key: 'retractionDistance',
    label: 'Retraction Distance',
    category: 'retraction',
    type: 'number',
    unit: 'mm',
    min: 0,
    max: 10,
    step: 0.5,
    default: 5,
    description: 'Distance to retract filament',
    dependency: 'retractionEnabled',
    visibleInUI: true,
    useInAIOptimization: true,
    advancedOnly: false,
    order: 2,
  },
  {
    key: 'retractionSpeed',
    label: 'Retraction Speed',
    category: 'retraction',
    type: 'number',
    unit: 'mm/s',
    min: 10,
    max: 100,
    step: 5,
    default: 45,
    description: 'Speed of retraction',
    dependency: 'retractionEnabled',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 3,
  },
  {
    key: 'retractionZHop',
    label: 'Z Hop Height',
    category: 'retraction',
    type: 'number',
    unit: 'mm',
    min: 0,
    max: 5,
    step: 0.1,
    default: 0.2,
    description: 'Lift nozzle during travel',
    helpText: 'Prevents nozzle dragging',
    dependency: 'retractionEnabled',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 4,
  },

  // ============================================
  // ADVANCED SETTINGS
  // ============================================
  {
    key: 'brimWidth',
    label: 'Brim Width',
    category: 'advanced',
    type: 'number',
    unit: 'mm',
    min: 0,
    max: 20,
    step: 1,
    default: 8,
    description: 'Width of brim for adhesion',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 1,
  },
  {
    key: 'skirtDistance',
    label: 'Skirt Distance',
    category: 'advanced',
    type: 'number',
    unit: 'mm',
    min: 0,
    max: 20,
    step: 1,
    default: 3,
    description: 'Distance of skirt from model',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 2,
  },
  {
    key: 'skirtLineCount',
    label: 'Skirt Line Count',
    category: 'advanced',
    type: 'number',
    min: 0,
    max: 10,
    step: 1,
    default: 1,
    description: 'Number of skirt lines',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 3,
  },
  {
    key: 'combing',
    label: 'Combing Mode',
    category: 'advanced',
    type: 'select',
    default: 'all',
    options: [
      { value: 'off', label: 'Off' },
      { value: 'all', label: 'All' },
      { value: 'noskin', label: 'No Skin' },
      { value: 'infill', label: 'Within Infill' },
    ],
    description: 'Keep nozzle inside printed areas',
    helpText: 'Reduces scarring on surface',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 4,
  },
  {
    key: 'adaptiveLayerHeight',
    label: 'Adaptive Layer Height',
    category: 'advanced',
    type: 'boolean',
    default: false,
    description: 'Vary layer height based on geometry',
    helpText: 'Better quality on curves',
    visibleInUI: true,
    useInAIOptimization: false,
    advancedOnly: true,
    order: 5,
  },
];
